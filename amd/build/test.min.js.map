{"version":3,"file":"test.min.js","sources":["../src/test.js"],"sourcesContent":["// Import selectors\nimport Selectors from './selectors';\n\nexport const init = () => {\n    initFunctions();\n\n//    Const tabs = document.getElementsByClassName(\"topictab\");\n    // Click each topic tab once to activate their status.\n    document.getElementsByClassName(\"topictab\").forEach(function(tab) {\n        tab.click();\n    });\n\n    checkTabs();\n    document.getElementById(\"tab0\").click();\n\n};\n\n/**\n * Initialize all functions\n */\nvar initFunctions = function() {\n    // Load all required functions.\n    tabClick();\n};\n\n/**\n * React to a clicked topic tab\n */\nvar tabClick = function() {\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.actions.topicTab)) {\n            var tabId = e.target.id;\n            var tabSections = e.target.getAttribute('sections');\n\n            // Select the clicked tab.\n            selectTab(e.target);\n\n            // When topic tab 0 is clicked show all sections, then hide all sections under other tabs\n            if (tabId == \"tab0\") {\n                // Show all sections.\n                document.getElementsByClassName(\"section\").forEach(function(section) {\n                    section.style.display = \"block\";\n                });\n                // Now hide all sections that are under other visible tabs.\n                var topicTabs = document.getElementsByClassName(\"topictab\");\n                topicTabs.forEach(function(tab) {\n                    if (window.getComputedStyle(tab).display != \"none\") {\n                        var otherTabSections = tab.getAttribute('sections');\n                        if (otherTabSections) {\n                            otherTabSections.split(\",\").forEach(function(sectionId) {\n                                document.querySelectorAll('[data-id=\"' + sectionId + '\"]').forEach(function(section) {\n                                    section.style.display = \"none\";\n                                });\n                            });\n                        }\n                    }\n                });\n            } else { // Hide all sections, then show all sections under the selected tab.\n                if (tabSections) {\n                    // Make sure the tab is shown.\n                    e.target.style.display = \"inline\";\n\n                    // 1st hide all sections.\n                    document.getElementsByClassName(\"section\").forEach(function(section) {\n                        section.style.display = \"none\";\n                    });\n                    // Now show all sections found for the clicked topic tab.\n                    tabSections.split(\",\").forEach(function(sectionId) {\n//                        Document.getElementById(\"section-\" + sectionId).style.display = \"block\";\n                        document.querySelectorAll('[data-id=\"' + sectionId + '\"]').forEach(function(section) {\n                            section.style.display = \"block\";\n                        });\n                    });\n                } else {\n                    // Since the tab does not contain any sections hide it.\n                    e.target.style.display = \"none\";\n                }\n            }\n        }\n    });\n};\n\n/**\n * Select a tab by removing the 'selected' class from the active tab(s) (if any) and re-apply it to the given tab.\n *\n * @param {Object=} selectedTab\n */\nvar selectTab = function(selectedTab) {\n    // There should only be one selected tab at a time - but you never know...\n    const selectedTabs = document.getElementsByClassName(\"selected\");\n\n    // Remove the 'selected' class\n    for (let tab of selectedTabs) {\n        tab.classList.remove(\"selected\");\n    }\n    // Add the 'selected' class to the given tab.\n    selectedTab.classList.add(\"selected\");\n\n};\n\n/**\n * Check if any tabs are visible. If not hide tab 0 as well otherwise show it.\n */\nvar checkTabs = function() {\n    // If there is NO visible topic tab then hide topic tab 0 as well.\n    var topicTabs = document.getElementsByClassName(\"topictab\");\n    var visibleTabs = 0;\n    topicTabs.forEach(function(tab) {\n        if (window.getComputedStyle(tab).display != \"none\") {\n            visibleTabs++;\n        }\n    });\n\n    if (visibleTabs === 1) {\n        document.getElementById('tab0').style.display = \"none\";\n    } else {\n        document.getElementById('tab0').style.display = \"inline\";\n    }\n};"],"names":["initFunctions","document","getElementsByClassName","forEach","tab","click","checkTabs","getElementById","tabClick","addEventListener","e","target","closest","Selectors","actions","topicTab","tabId","id","tabSections","getAttribute","selectTab","section","style","display","window","getComputedStyle","otherTabSections","split","sectionId","querySelectorAll","selectedTab","selectedTabs","classList","remove","add","topicTabs","visibleTabs"],"mappings":"uPAGoB,KAChBA,gBAIAC,SAASC,uBAAuB,YAAYC,SAAQ,SAASC,KACzDA,IAAIC,WAGRC,YACAL,SAASM,eAAe,QAAQF,aAOhCL,cAAgB,WAEhBQ,YAMAA,SAAW,WACXP,SAASQ,iBAAiB,SAASC,OAC3BA,EAAEC,OAAOC,QAAQC,mBAAUC,QAAQC,UAAW,KAC1CC,MAAQN,EAAEC,OAAOM,GACjBC,YAAcR,EAAEC,OAAOQ,aAAa,eAGxCC,UAAUV,EAAEC,QAGC,QAATK,MAEAf,SAASC,uBAAuB,WAAWC,SAAQ,SAASkB,SACxDA,QAAQC,MAAMC,QAAU,WAGZtB,SAASC,uBAAuB,YACtCC,SAAQ,SAASC,QACqB,QAAxCoB,OAAOC,iBAAiBrB,KAAKmB,QAAmB,KAC5CG,iBAAmBtB,IAAIe,aAAa,YACpCO,kBACAA,iBAAiBC,MAAM,KAAKxB,SAAQ,SAASyB,WACzC3B,SAAS4B,iBAAiB,aAAeD,UAAY,MAAMzB,SAAQ,SAASkB,SACxEA,QAAQC,MAAMC,QAAU,sBAOxCL,aAEAR,EAAEC,OAAOW,MAAMC,QAAU,SAGzBtB,SAASC,uBAAuB,WAAWC,SAAQ,SAASkB,SACxDA,QAAQC,MAAMC,QAAU,UAG5BL,YAAYS,MAAM,KAAKxB,SAAQ,SAASyB,WAEpC3B,SAAS4B,iBAAiB,aAAeD,UAAY,MAAMzB,SAAQ,SAASkB,SACxEA,QAAQC,MAAMC,QAAU,eAKhCb,EAAEC,OAAOW,MAAMC,QAAU,YAYzCH,UAAY,SAASU,mBAEfC,aAAe9B,SAASC,uBAAuB,gBAGhD,IAAIE,OAAO2B,aACZ3B,IAAI4B,UAAUC,OAAO,YAGzBH,YAAYE,UAAUE,IAAI,aAO1B5B,UAAY,eAER6B,UAAYlC,SAASC,uBAAuB,YAC5CkC,YAAc,EAClBD,UAAUhC,SAAQ,SAASC,KACqB,QAAxCoB,OAAOC,iBAAiBrB,KAAKmB,SAC7Ba,iBAKJnC,SAASM,eAAe,QAAQe,MAAMC,QADtB,IAAhBa,YACgD,OAEA"}