{"version":3,"file":"tabs.min.js","sources":["../src/tabs.js"],"sourcesContent":["define(['jquery', 'jqueryui', 'core/str'], function($) {\n    /* eslint no-console: [\"error\", { allow: [\"log\", \"warn\", \"error\"] }] */\n    return {\n        init: function() {\n\n            /**\n             * Inserts the tabindex from any active tab to its visible sections to make sure they will follow\n             * directly after the tab when navigating using the TAB key\n             *\n             * @param {Object} element\n             */\n            function insertTabIndex(element) {\n                var tabtabindex = element.attr('tabindex');\n                if (tabtabindex > 0) {\n                    $('.section.main:visible').each(function() {\n                        $(this).attr('tabindex', tabtabindex);\n                    });\n                }\n            }\n\n            /**\n             * Supporting navigation using the keyboard\n             */\n            function tabnav() {\n                $(document).keyup(function(e) {\n                    var code = e.keyCode || e.which;\n                    var focused = $(':focus');\n                    // When using the TAB key to navigate the page actually click a tab when in focus to reveal its sections\n                    if (code === 13) { // ENTER key pressed\n                        // Click a focused tab by pressing ENTER\n                        if (typeof focused.attr('id') !== 'undefined' && focused.attr('id').indexOf(\"tab\") > -1) {\n                            focused.click();\n                        }\n                        // Toggle a focused section by pressing ENTER\n                        if (typeof focused.attr('id') !== 'undefined' && focused.attr('id').indexOf(\"section\") > -1) {\n                            focused.find('.toggler:visible').click();\n                        }\n                    }\n                });\n            }\n\n            /**\n             * Add a section ID and number to a given tab\n             *\n             * @param {number} tabnum\n             * @param {number} sectionid\n             * @param {number} sectionnum\n             */\n            function add2tab(tabnum, sectionid, sectionnum) {\n                // Remove the section id and section number from any tab\n                $(\".tablink\").each(function() {\n                    $(this).attr('sections', $(this).attr('sections').replace(\",\" + sectionid, \"\"));\n                    $(this).attr('sections', $(this).attr('sections').replace(sectionid + \",\", \"\"));\n                    $(this).attr('sections', $(this).attr('sections').replace(sectionid, \"\"));\n\n                    $(this).attr('section_nums', $(this).attr('section_nums').replace(\",\" + sectionnum, \"\"));\n                    $(this).attr('section_nums', $(this).attr('section_nums').replace(sectionnum + \",\", \"\"));\n                    $(this).attr('section_nums', $(this).attr('section_nums').replace(sectionnum, \"\"));\n                });\n                // Add the sectionid to the new tab\n                if (tabnum > 0) { // No need to store section ids for tab 0\n                    if ($(\"#tab\" + tabnum).attr('sections').length === 0) {\n                        $(\"#tab\" + tabnum).attr('sections', $(\"#tab\" + tabnum).attr('sections') + sectionid);\n                    } else {\n                        $(\"#tab\" + tabnum).attr('sections', $(\"#tab\" + tabnum).attr('sections') + \",\" + sectionid);\n                    }\n                    if ($(\"#tab\" + tabnum).attr('section_nums').length === 0) {\n                        $(\"#tab\" + tabnum).attr('section_nums', $(\"#tab\" + tabnum).attr('section_nums') + sectionnum);\n                    } else {\n                        $(\"#tab\" + tabnum).attr('section_nums', $(\"#tab\" + tabnum).attr('section_nums') + \",\" + sectionnum);\n                        // X console.log('---> section_nums: '+$(\"#tab\"+tabnum).attr('section_nums'));\n                    }\n                }\n            }\n\n            /**\n             * Save section ids (and numbers for backup reasons) in relation to given tab\n             *\n             * @param {number} tabid\n             */\n            function save2tab(tabid) {\n                // Save the new tab data to the database\n                var courseid = $('#courseid').attr('courseid');\n                $.ajax({\n                    url: \"format/topics2/ajax/update_tab_settings.php\",\n                    type: \"POST\",\n                    data: {\n                        'courseid': courseid,\n                        'tabid': tabid,\n                        'sections': $(\"#\" + tabid).attr('sections'),\n                        'sectionnums': $(\"#\" + tabid).attr('section_nums'),\n                        'sesskey': M.cfg.sesskey\n                    },\n                    success: function(result) {\n                        if (result !== '') {\n                            // X console.log(result);\n                        }\n                    }\n                });\n            }\n\n            /**\n             * Store the number of current sections in a cookie - so we know how many have been added later\n             */\n            var setNumsectionsCookie = function() {\n                $('#changenumsections').on('click', function() {\n                    var numSections = $('.section.main').length;\n                    sessionStorage.setItem('numSections', numSections);\n                });\n            };\n\n            /**\n             * Escape some characters in HTML text\n             *\n             * @param {string} text\n             * @returns {*}\n             */\n            var escapeHtml = function(text) {\n                var map = {\n                    '&': '&amp;',\n                    '<': '&lt;',\n                    '>': '&gt;',\n                    '\"': '&quot;',\n                    \"'\": '&#039;'\n                };\n\n                return text.replace(/[&<>\"']/g, function(m) {\n                    return map[m];\n                });\n            };\n\n            /**\n             * When a limit for the tabname is set truncate the name of the given tab to limit\n             *\n             * @param {Object} tab\n             */\n            var truncateTabname = function(tab) {\n\n                if ($('.limittabname').length > 0) {\n                    var x = $('.limittabname').attr('value');\n                    var origTabTitle = tab.attr('tab_title');\n                    if (origTabTitle.length > x) {\n                        var shortTabTitle = origTabTitle.substr(0, x) + String.fromCharCode(8230);\n                        if (tab.hasClass('tabsectionname')) { // A sectionname as tabname\n                            tab.html(shortTabTitle);\n                        } else {\n                            if ($('.inplaceeditingon').length === 0) { // Don't do this while editing the tab name\n                                if ($('.inplaceeditable').length > 0) { // We are in edit mode...\n                                    tab.find('a').html(tab.find('a').html().replace(escapeHtml(origTabTitle), shortTabTitle));\n                                } else {\n                                    tab.html(tab.html().replace(escapeHtml(origTabTitle), shortTabTitle));\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n            /**\n             * Truncate all tabnames\n             */\n            var truncateAllTabnames = function() {\n                if ($('.limittabname').length > 0) {\n                    $('.tablink').each(function() {\n                        truncateTabname($(this));\n                    });\n                }\n            };\n\n            /**\n             * When a limit for the tabname is set expand the name of the given tab to the original\n             *\n             * @param {Object} tab\n             */\n            var expandTabname = function(tab) {\n\n                if ($('.limittabname').length > 0) {\n                    var x = $('.limittabname').attr('value');\n                    var origTabTitle = tab.attr('tab_title');\n                    // Console.log('expand => orig = ' + origTabTitle);\n\n                    if (origTabTitle.length > x) {\n                        var shortTabTitle = origTabTitle.substr(0, x) + String.fromCharCode(8230);\n                        // Console.log('       => short = ' + shortTabTitle);\n                        if (tab.hasClass('tabsectionname')) { // A sectionname as tabname\n                            tab.html(origTabTitle);\n                        } else {\n                            if ($('.inplaceeditingon').length === 0) { // Don't do this while editing the tab name\n                                if ($('.inplaceeditable').length > 0) { // We are in edit mode...\n\n                                    // Make sure that tab-tile matches data-value after the tab title was edited\n                                    var dataValue = tab.find('.inplaceeditable').attr('data-value');\n                                    if (origTabTitle !== dataValue) { // They do NOT match so make them\n                                        tab.attr('tab_title', dataValue);\n                                        origTabTitle = dataValue;\n                                        shortTabTitle = origTabTitle.substr(0, x) + String.fromCharCode(8230);\n                                    }\n\n                                    tab.find('a').html(tab.find('a').html().replace(escapeHtml(shortTabTitle), origTabTitle));\n                                } else {\n                                    tab.html(tab.html().replace(escapeHtml(shortTabTitle), origTabTitle));\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n            /**\n             * When a single section is shown under a tab use the section name as tab name\n             *\n             * @param {Object} tab\n             * @param {Object} target\n             */\n            var changeTab = function(tab, target) {\n                // X console.log('single section in tab: using section name as tab name');\n\n                // Replace the tab name with the section name\n                var origSectionname = target.find('.sectionname:not(.hidden)');\n                if ($('.tabname_backup:visible').length > -1) {\n                    var theSectionname = target.attr('aria-label');\n                    tab.parent().append(tab.clone().addClass('tabname_backup').hide()); // Create a hidden clone of tab name\n                    tab.html(theSectionname).addClass('tabsectionname');\n                    tab.attr('tab_title', theSectionname);\n\n                    // Hide the original sectionname when not in edit mode\n                    if ($('.inplaceeditable').length === 0) {\n                        origSectionname.hide();\n                        target.find('.sectionhead').hide();\n                    } else {\n                        target.find('.toggler').addClass('toggler_edit_only').hide();\n                        origSectionname.addClass('edit_only');\n                    }\n\n                }\n            };\n\n            /**\n             * A section name is updated...\n             */\n            var updateSectionName = function() {\n                $(\".section\").on('updated', function() {\n                    var newSectionname = $(this).find('.inplaceeditable').attr('data-value');\n                    $(this).attr('aria-label', newSectionname);\n                    $('.tablink.active').click();\n                });\n            };\n\n            /**\n             * Restore the tab name\n             *\n             * @param {Object} tab\n             */\n            var restoreTab = function(tab) {\n                // Restore the tab name from the backup\n                var theBackup = tab.parent().find('.tabname_backup');\n                var theTab = tab.parent().find('.tabsectionname').removeClass('tabsectionname');\n                theTab.html(theBackup.html());\n                theBackup.remove();\n\n                // Reveal the original sectionname\n                $('.sectionname').removeClass('edit_only').show();\n\n                $('.hidden.sectionname').show();\n                $('.section-handle').show();\n                $('.toggler_edit_only').removeClass('toggler_edit_only').show();\n\n                // X console.log('--> restoring section headline ');\n            };\n\n            /**\n             * React to a clicked tab\n             */\n            var tabClick = function() {\n                $(\".tablink\").on('click', function() {\n                    var courseid = $('#courseid').attr('courseid');\n                    var tabid = $(this).attr('id');\n                    var sections = $(this).attr('sections');\n                    var sectionArray = sections.split(\",\");\n\n                    // Make this an active tab\n                    $(\".tablink.active\").removeClass(\"active\"); // First remove any active class from tabs\n                    $(this).addClass('active'); // Then add the active class to the clicked tab\n\n                    // store the course ID and the ID of the active tab in cookies\n                    sessionStorage.setItem('courseid', courseid);\n                    sessionStorage.setItem('tabid', tabid);\n\n                    truncateAllTabnames();\n                    expandTabname($(this));\n\n                    var clickedTabName;\n                    if ($(this).find('.inplaceeditable-text')) {\n                        clickedTabName = $(this).find('.inplaceeditable-text').attr('data-value');\n                    }\n                    if (typeof clickedTabName == 'undefined') {\n                        clickedTabName = $(this).html();\n                    }\n\n                    if (tabid === 'tab0') { // Show all sections - then hide each section shown in other tabs\n                        $(\"#changenumsections\").show();\n                        $(\"li.section\").removeClass('hidden').show();\n                        $(\".topictab:visible\").each(function() {\n                            if ($(this).attr('sections').length > 0) {\n                                // If any split sections into an array, loop through it and hide section with the found ID\n                                $.each($(this).attr('sections').split(\",\"), function(index, value) {\n                                    var target = $(\".section[section-id='\" + value + \"']\");\n                                    target.addClass('hidden').hide();\n                                    // X console.log(\"--> hiding section \" + value);\n                                });\n                            }\n                        });\n                    } else { // Hide all sections - then show those found in sectionArray\n                        $(\"#changenumsections\").show();\n                        $(\"li.section\").addClass('hidden').hide();\n                        $.each(sectionArray, function(index, value) {\n                            var target = $(\".section[section-id='\" + value + \"']\");\n                            target.removeClass('hidden').show();\n                        });\n                    }\n\n                    // Show section-0 always when it should be shown always\n                    $('#ontop_area #section-0').removeClass('hidden').show();\n\n                    var visibleSections = $('li.section:visible').length;\n                    var hiddenSections = $('li.section:visible').find('.section_availability').find('.ishidden').length;\n\n                    // Section 0 is on top - so reducing the number of visible sections for this tab by 1.\n                    if ($('.section0_ontop').length > 0) {\n                        visibleSections--;\n                    }\n\n                    if (visibleSections < 1) {\n                        // Tab with no visible sections - hiding it.\n                        $(this).parent().hide();\n\n                        // Restoring generic tab name if a tab is empty (again).\n                        var genericTitle = $(this).attr('generic_title');\n                        $.ajax({\n                            url: \"format/topics2/ajax/update_tab_name.php\",\n                            type: \"POST\",\n                            data: {\n                                'courseid': courseid,\n                                'tabid': tabid,\n                                'tab_name': genericTitle,\n                                'sesskey': M.cfg.sesskey\n                            },\n                            success: function(result) {\n                                if (result !== '') {\n                                    // X console.log('Reset name of tab ID ' + tabid + ' to \"' + result + '\"');\n                                    $('[data-itemid=' + result + ']').attr('data-value', genericTitle).\n                                    find('.quickeditlink').html(genericTitle);\n\n                                    // Re-instantiate the just added DOM elements\n                                    initFunctions();\n                                }\n                            }\n                        });\n                    } else {\n                        // X console.log('tab with visible sections - showing it');\n                        $(this).parent().show();\n                    }\n\n                    /**\n                     * If option is set and when a tab other than tab 0\n                     * shows a single section perform some visual tricks\n                     */\n                    if ($('.single_section_tabs').length > 0\n                        && $(this).attr('sections').split(',').length == 1\n                        && tabid !== 'tab0') {\n                        var target = $('li.section:visible').first();\n                        // If section0 is shown always on top ignore the first visible section and use the 2nd\n                        if ($('.section0_ontop').length > 0) {\n                            target = $('li.section:visible:eq(1)');\n                        }\n                        var firstSectionId = target.attr('id');\n                        if ($(this).attr('sections').split(',').length == 1\n                            && firstSectionId !== 'section-0'\n                            && $(this).attr('generic_title').indexOf('Tab') >= 0 // Do this only for original tabs\n                        ) {\n                            changeTab($(this), target);\n                            // Make sure the content is un-hidden\n                            target.find('.toggle_area').removeClass('hidden').show();\n                        } else if ($('.inplaceeditable').length > 0 && firstSectionId !== 'section-0') {\n                            restoreTab($(this));\n                        }\n                    }\n\n                    /**\n                     * If all visible sections are hidden for students the tab is hidden for them as well\n                     * in this case mark the tab for admins so they are aware\n                     */\n                    if (visibleSections <= hiddenSections) {\n                        showTabHint($(this));\n                    } else {\n                        hideTabHint($(this));\n                    }\n\n                    // If tab0 is alone hide it\n                    if (tabid === 'tab0' && $('.tabitem:visible').length === 1) {\n                        // X console.log('--> tab0 is a single tab - hiding it');\n                        $('.tabitem').hide();\n                    }\n                    // This will make sure tab navigation goes from tab to its sections and then on to the next tab\n                    insertTabIndex($(this));\n                });\n            };\n\n            /**\n             * Get the hint string and show the hint icon next to the tab name\n             *\n             * @param {Object} tab\n             */\n            var showTabHint = function(tab) {\n                var tabid = tab.attr('id');\n                tab.addClass('hidden-tab');\n\n                require(['core/str'], function(str) {\n                    var getTheString = str.get_string('hidden_tab_hint', 'format_topics2');\n                    $.when(getTheString).done(function(theString) {\n                        tab.find('#not-shown-hint-' + tabid).remove();\n                        var theAppendix = '<i id=\"not-shown-hint-' +\n                            tabid + '\" class=\"fa fa-info\" title=\"' + theString + '\"></i>';\n                        if (tab.attr('sections').split(',').length == 1\n                            && $('.single_section_tabs').length > 0) { // If there is a single topic\n                            tab.html(tab.html() + ' ' + theAppendix);\n                        } else if ($('.tablink .fa-pencil').length > 0) { // When in edit mode ...\n                            tab.find('.inplaceeditable').append(theAppendix);\n                        } else {\n                            tab.html(tab.html() + ' ' + theAppendix);\n                        }\n                    });\n                });\n            };\n\n            /**\n             * Hide a tab hint\n             *\n             * @param {Object} tab\n             */\n            var hideTabHint = function(tab) {\n                var tabid = tab.attr('id');\n                tab.removeClass('hidden-tab');\n                $('#not-shown-hint-' + tabid).remove();\n            };\n\n            /**\n             * Moving a section to a tab by menu\n             */\n            var tabMove = function() {\n                $(\".tab_mover\").on('click', function() {\n                    var tabnum = $(this).attr('tabnr'); // This is the tab number where the section is moved to\n                    var sectionid = $(this).closest('li.section').attr('section-id');\n                    var sectionnum = $(this).closest('li.section').attr('id').substring(8);\n\n                    // X console.log('--> found section num: '+sectionnum);\n                    var activeTabId = $('.topictab.active').first().attr('id');\n\n                    if (typeof activeTabId == 'undefined') {\n                        activeTabId = 'tab0';\n                    }\n                    // X console.log('----');\n                    // X console.log('moving section '+sectionid+' from tab \"'+activeTabId+'\" to tab nr '+tabnum);\n                    add2tab(tabnum, sectionid, sectionnum);\n\n                    $(\"#tab\" + tabnum).click();\n                    $('#' + activeTabId).click();\n\n                    // Restore the section before moving it in case it was a single\n                    restoreTab($('#tab' + tabnum));\n\n                    // If the last section of a tab was moved click the target tab\n                    // otherwise click the active tab to refresh it\n                    var countableSections = $('li.section:visible').length - ($(\"#ontop_area\").hasClass('section0_ontop') ? 1 : 0);\n                    // X console.log('---> visible sections = '+$('li.section:visible').length);\n                    // X console.log('---> countableSections = '+countableSections);\n                    if (countableSections > 0 && $('li.section:visible').length >= countableSections) {\n                        // X console.log('staying with the current tab (id = '+activeTabId+\n                        // X   ') as there are still '+$('li.section:visible').length+' sections left');\n                        $(\"#tab\" + tabnum).click();\n                        $('#' + activeTabId).click();\n                    } else {\n                        // X console.log('no section in active tab id '+\n                        // X   activeTabId+' left - hiding it and following section to new tab nr '+tabnum);\n                        $(\"#tab\" + tabnum).click();\n                        $('#' + activeTabId).parent().hide();\n                    }\n                });\n            };\n\n            /**\n             * Moving section0 to the ontop area\n             */\n            var moveOntop = function() {\n                $(\".ontop_mover\").on('click', function() {\n                    $(\"ul#ontop_area\").append($(this).closest('.section')).addClass('section0_ontop');\n                    $(\"#section-0\").removeClass('main');\n                });\n            };\n\n            /**\n             * Moving section0 back into line with others\n             */\n            var moveInline = function() {\n                $(\".inline_mover\").on('click', function() {\n                    var sectionid = $(this).closest('.section').attr('section-id');\n                    $(\"#inline_area\").append($(this).closest('.section'));\n                    $(\"#section-0\").addClass('main');\n                    // Remove the 'section0_ontop' class\n                    $('.section0_ontop').removeClass('section0_ontop');\n                    // Find the former tab for section0 if any and click it\n                    $(\".tablink\").each(function() {\n                        if ($(this).attr('sections').indexOf(sectionid) > -1) {\n                            $(this).click();\n                            return false;\n                        }\n                        return false;\n                    });\n                });\n            };\n\n            /**\n             * A section edit menu is clicked\n             * hide the the current tab from the tab move options of the section edit menu\n             * if this is section0 do some extra stuff\n             */\n            var dropdownToggle = function() {\n                $(\".menubar\").on('click', function() {\n                    if ($(this).parent().parent().hasClass('section_action_menu')) {\n                        var sectionid = $(this).closest('.section').attr('id');\n                        $('#' + sectionid + ' .tab_mover').show(); // 1st show all options\n                        // replace all tabnames with the current names shown in tabs\n                        // Get the current tab names\n                        var tabArray = [];\n                        var trackIds = []; // Tracking the tab IDs so to use each only once\n                        $('.tablink').each(function() {\n                            if (typeof $(this).attr('id') !== 'undefined') {\n                                var tabname = '';\n                                var tabid = $(this).attr('id').substr(3);\n                                if ($(this).hasClass('tabsectionname')) {\n                                    tabname = $(this).html();\n                                } else {\n                                    tabname = $(this).find('.inplaceeditable').attr('data-value');\n                                }\n                                if ($.inArray(tabid, trackIds) < 0) {\n                                    // If this is a hidden tab remove all garnish from the name.\n                                    if ($(this).hasClass('hidden-tab')) {\n                                        tabname = $(this).find('a').clone();\n                                        tabname.find('span.quickediticon').remove();\n                                        tabname = $.trim(tabname.html());\n                                    }\n                                    tabArray[tabid] = tabname;\n                                    trackIds.push(tabid);\n                                }\n                            }\n                        });\n\n                        // Updating menu options with current tab names\n                        $(this).parent().find('.tab_mover').each(function() {\n                            var tabnr = $(this).attr('tabnr');\n                            var newMenuText = 'To Tab ' +\n                                (tabArray[tabnr] === '' || tabArray[tabnr] === 'Tab ' + tabnr ? tabnr : '\"' + tabArray[tabnr] +\n                                    ((tabArray[tabnr] === 'Tab ' + tabnr || tabnr === '0') ? '\"' : '\" (Tab ' + tabnr + ')'));\n\n                            $(this).find('.menu-action-text').html(newMenuText);\n                        });\n                        if (sectionid === 'section-0') {\n                            if ($('#ontop_area.section0_ontop').length === 1) { // If section0 is on top don't show tab options\n                                $(\"#section-0 .inline_mover\").show();\n                                $(\"#section-0 .tab_mover\").addClass('tab_mover_bak').removeClass('tab_mover').hide();\n                                $(\"#section-0 .ontop_mover\").hide();\n                            } else {\n                                $(\"#section-0 .inline_mover\").hide();\n                                $(\"#section-0 .tab_mover_bak\").addClass('tab_mover').removeClass('tab_mover_bak').show();\n                                $(\"#section-0 .ontop_mover\").show();\n                            }\n                        } else if (typeof $('.tablink.active').attr('id') !== 'undefined') {\n                            var tabnum = $('.tablink.active').attr('id').substring(3);\n                            $('#' + sectionid + ' .tab_mover[tabnr=\"' + tabnum + '\"]').hide(); // Then hide the one not needed\n                        }\n                        if ($('.tablink:visible').length === 0) {\n                            $('#' + sectionid + ' .tab_mover[tabnr=\"0\"]').hide();\n                        }\n                    }\n                });\n            };\n\n            /**\n             * A section edit menu is clicked - to hide or show a section to students\n             * if hiding the last section of a tab that is visible to students show a hint in the tab\n             */\n            var toggleAvailiability = function() {\n                $(\".section-actions .menubar .action-menu-trigger .dropdown .dropdown-menu .dropdown-item\").on('click', function() {\n                    var activeTab = $('.tablink.active');\n                    var visibleSections = $('li.section:visible').length;\n                    var hiddenSections = $('li.section:visible').find('.section_availability').find('.ishidden').length;\n\n                    if ($(this).find('.menu-action-text').html().indexOf(\"Hide\") >= 0) {\n                        if (activeTab.attr('id') != undefined\n                            && visibleSections <= hiddenSections + $('.section0_ontop').length + 1\n                        ) {\n                            showTabHint(activeTab);\n                        }\n                    }\n                    if ($(this).find('.menu-action-text').html().indexOf(\"Show\") >= 0) {\n                        if (activeTab.attr('id') != undefined) {\n                            hideTabHint(activeTab);\n                        }\n                    }\n                });\n            };\n\n            /**\n             * A direct URL to a specific section is clicked - reveal the corresponding tab\n             */\n            var followTabUrl = function() {\n                $(\"a\").click(function() {\n                    if ($(this).attr('href') !== '#' && typeof $(this).attr('href') !== 'undefined') {\n                        var sectionnum = $(this).attr('href').split('#')[1];\n                        // If the link contains a sectionnum (e.g. is NOT undefined) find and click the corresponding tab\n                        if (typeof sectionnum !== 'undefined') {\n                            // Find the corresponding section ID for the section number we found\n                            var sectionid = $('#' + sectionnum).attr('section-id');\n                            // Find the tab to which the section ID is related\n                            var foundIt = false;\n                            $('.tablink').each(function() {\n                                if ($(this).attr('sections').indexOf(sectionid) > -1) {\n                                    $(this).click();\n                                    foundIt = true;\n                                    return false;\n                                }\n                            });\n                            // If it has not been found related to any tab it has to be under tab0 - so click that\n                            if (!foundIt) {\n                                $('#tab0').click();\n                            }\n                        }\n                    }\n                });\n            };\n\n            /**\n             * Initialize all functions\n             */\n            var initFunctions = function() {\n                // Load all required functions above\n                tabClick();\n                tabMove();\n                moveOntop();\n                moveInline();\n                dropdownToggle();\n                setNumsectionsCookie();\n                tabnav();\n                toggleAvailiability();\n                followTabUrl();\n                updateSectionName();\n            };\n\n            /**\n             * What to do if a tab has been dropped onto another\n             *\n             * @param {Object} event\n             * @param {Object} ui\n             */\n            var handleTabDropEvent = function(event, ui) {\n                var courseFormatName = $(document).find('.course_format_name').html();\n                var draggedTab = ui.draggable.find('.topictab').first();\n                var targetTab = $(this).find('.topictab').first();\n\n                // Swap both tabs\n                var zwischenspeicher = draggedTab.parent().html();\n                draggedTab.parent().html(targetTab.parent().html());\n                targetTab.parent().html(zwischenspeicher);\n\n                // Re-instantiate the clickability for the just added DOM elements\n                initFunctions();\n\n                // Get the new tab sequence and write it back to format options\n                var tabSeqA = [];\n\n                // Get the id of each tab according to their position (left to right)\n                $('.tablink').each(function() {\n                    var tabid = $(this).attr('id');\n                    if (typeof tabid !== 'undefined') {\n                        if (!tabSeqA.includes(tabid)) {\n                            tabSeqA.push(tabid);\n                        }\n                    }\n                });\n\n                // Implode the array to a string\n                var tabSeq = tabSeqA.join();\n\n                // Finally call php to write the data\n                var courseid = $('#courseid').attr('courseid');\n                $.ajax({\n                    url: \"format/topics2/ajax/update_tab_seq.php\",\n                    type: \"POST\",\n                    data: {\n                        'courseid': courseid,\n                        'tab_seq': tabSeq,\n                        'course_format_name': courseFormatName,\n                        'sesskey': M.cfg.sesskey\n                    },\n                    success: function(result) {\n                        console.log('updated tab sequence: ' + result);\n                    }});\n            };\n\n            /**\n             * The document is ready\n             */\n            $(document).ready(function() {\n                // X console.log('=================< topics2/tabs.js >=================');\n                initFunctions();\n\n                // Show the edit menu for section-0\n                $(\"#section-0 .right.side\").show();\n\n                // Truncate tab names when option is set\n                truncateAllTabnames();\n\n                // Make tabs draggable when in edit mode (the pencil class is present)\n                if ($('.inplaceeditable').length > 0) {\n\n                    $('.topictab').parent().draggable({\n                        cursor: 'move',\n                        stack: '.tabitem', // Make sure the dragged tab is always on top of others\n                        revert: true,\n                    });\n                    $('.topictab').parent().droppable({\n                        accept: '.tabitem',\n                        hoverClass: 'hovered',\n                        drop: handleTabDropEvent,\n                    });\n                }\n\n                // Check for courseid and tab cookies\n                // Only when the page is reloaded for the same course check for a tab cookie and delete it otherwise\n                var courseid = $('#courseid').attr('courseid');\n                var originCourseid = sessionStorage.getItem('courseid');\n                var tabid = null;\n                if (originCourseid !== null && originCourseid == courseid) {\n                    tabid = sessionStorage.getItem('tabid');\n                } else {\n                    sessionStorage.removeItem('courseid');\n                    sessionStorage.removeItem('tabid');\n                }\n\n                // Click all tabs once\n                $('#tab0').click();\n                $('.tablink:visible').click();\n\n                // If there are visible tabs click them all once to potentially reveal any section names as tab names\n                if ($(\".topictab:visible\").length > 0) {\n                    if (tabid !== null && tabid != 'tab0') {\n                        // If a 'numSections' cookie is set the changenumsections url has been clicked.\n                        // While the particular tab was active and we have returned here.\n                        // If the tabid is other than tab0 move the newly added sections to that tab.\n\n                        // Get the number of sections before new ones were added from another cookie\n                        var numSections = sessionStorage.getItem('numSections');\n                        sessionStorage.removeItem('numSections');\n                        if (numSections !== null) {\n                            // Attach all new sections to the given tab\n                            var tabnum = tabid.substring(3); // This is the tab number(!) where the section is moved to\n                            var i = 0;\n                            $('.section.main').each(function() {\n                                i = i + 1;\n                                if (i > numSections) {\n                                    // X console.log('new section id = ' + $(this).attr('id'));\n                                    var sectionid = $(this).attr('section-id');\n                                    var sectionnum = $(this).attr('id').substring(8);\n                                    add2tab(tabnum, sectionid, sectionnum);\n                                }\n                            });\n                            save2tab(tabid);\n                        }\n\n                        // Click the tab with the found tab ID\n                        $('#' + tabid).click();\n                    } else {\n                        // Click the 1st visible tab by default\n                        $('.tablink:visible').first().click();\n                    }\n                }\n\n                // If section0 is on top restrict section menu - restore otherwise\n                if ($(\"#ontop_area\").hasClass('section0_ontop')) {\n                    $(\"#section-0 .inline_mover\").show();\n                    $(\"#section-0 .tab_mover\").hide();\n                    $(\"#section-0 .ontop_mover\").hide();\n                } else {\n                    $(\"#section-0 .inline_mover\").hide();\n                    $(\"#section-0 .tab_mover\").show();\n                    $(\"#section-0 .ontop_mover\").show();\n                }\n            });\n        }\n    };\n});\n"],"names":["define","$","init","add2tab","tabnum","sectionid","sectionnum","each","this","attr","replace","length","escapeHtml","text","map","m","truncateAllTabnames","tab","x","origTabTitle","shortTabTitle","substr","String","fromCharCode","hasClass","html","find","truncateTabname","restoreTab","theBackup","parent","removeClass","remove","show","tabClick","on","clickedTabName","courseid","tabid","sectionArray","split","addClass","sessionStorage","setItem","dataValue","expandTabname","index","value","hide","element","tabtabindex","visibleSections","hiddenSections","genericTitle","ajax","url","type","data","M","cfg","sesskey","success","result","initFunctions","target","first","firstSectionId","indexOf","origSectionname","theSectionname","append","clone","changeTab","showTabHint","hideTabHint","require","str","getTheString","get_string","when","done","theString","theAppendix","closest","substring","activeTabId","click","countableSections","tabArray","trackIds","tabname","inArray","trim","push","tabnr","newMenuText","numSections","document","keyup","e","code","keyCode","which","focused","activeTab","undefined","foundIt","newSectionname","handleTabDropEvent","event","ui","courseFormatName","draggedTab","draggable","targetTab","zwischenspeicher","tabSeqA","includes","tabSeq","join","console","log","ready","cursor","stack","revert","droppable","accept","hoverClass","drop","originCourseid","getItem","removeItem","i","save2tab"],"mappings":"AAAAA,6BAAO,CAAC,SAAU,WAAY,aAAa,SAASC,SAEzC,CACHC,KAAM,oBA6COC,QAAQC,OAAQC,UAAWC,YAEhCL,EAAE,YAAYM,MAAK,WACfN,EAAEO,MAAMC,KAAK,WAAYR,EAAEO,MAAMC,KAAK,YAAYC,QAAQ,IAAML,UAAW,KAC3EJ,EAAEO,MAAMC,KAAK,WAAYR,EAAEO,MAAMC,KAAK,YAAYC,QAAQL,UAAY,IAAK,KAC3EJ,EAAEO,MAAMC,KAAK,WAAYR,EAAEO,MAAMC,KAAK,YAAYC,QAAQL,UAAW,KAErEJ,EAAEO,MAAMC,KAAK,eAAgBR,EAAEO,MAAMC,KAAK,gBAAgBC,QAAQ,IAAMJ,WAAY,KACpFL,EAAEO,MAAMC,KAAK,eAAgBR,EAAEO,MAAMC,KAAK,gBAAgBC,QAAQJ,WAAa,IAAK,KACpFL,EAAEO,MAAMC,KAAK,eAAgBR,EAAEO,MAAMC,KAAK,gBAAgBC,QAAQJ,WAAY,QAG9EF,OAAS,IAC0C,IAA/CH,EAAE,OAASG,QAAQK,KAAK,YAAYE,OACpCV,EAAE,OAASG,QAAQK,KAAK,WAAYR,EAAE,OAASG,QAAQK,KAAK,YAAcJ,WAE1EJ,EAAE,OAASG,QAAQK,KAAK,WAAYR,EAAE,OAASG,QAAQK,KAAK,YAAc,IAAMJ,WAE7B,IAAnDJ,EAAE,OAASG,QAAQK,KAAK,gBAAgBE,OACxCV,EAAE,OAASG,QAAQK,KAAK,eAAgBR,EAAE,OAASG,QAAQK,KAAK,gBAAkBH,YAElFL,EAAE,OAASG,QAAQK,KAAK,eAAgBR,EAAE,OAASG,QAAQK,KAAK,gBAAkB,IAAMH,iBAgDhGM,WAAa,SAASC,UAClBC,IAAM,KACD,YACA,WACA,WACA,aACA,iBAGFD,KAAKH,QAAQ,YAAY,SAASK,UAC9BD,IAAIC,OAkCfC,oBAAsB,WAClBf,EAAE,iBAAiBU,OAAS,GAC5BV,EAAE,YAAYM,MAAK,YA3BL,SAASU,QAEvBhB,EAAE,iBAAiBU,OAAS,EAAG,KAC3BO,EAAIjB,EAAE,iBAAiBQ,KAAK,SAC5BU,aAAeF,IAAIR,KAAK,gBACxBU,aAAaR,OAASO,EAAG,KACrBE,cAAgBD,aAAaE,OAAO,EAAGH,GAAKI,OAAOC,aAAa,MAChEN,IAAIO,SAAS,kBACbP,IAAIQ,KAAKL,eAE6B,IAAlCnB,EAAE,qBAAqBU,SACnBV,EAAE,oBAAoBU,OAAS,EAC/BM,IAAIS,KAAK,KAAKD,KAAKR,IAAIS,KAAK,KAAKD,OAAOf,QAAQE,WAAWO,cAAeC,gBAE1EH,IAAIQ,KAAKR,IAAIQ,OAAOf,QAAQE,WAAWO,cAAeC,mBAclEO,CAAgB1B,EAAEO,WAyF1BoB,WAAa,SAASX,SAElBY,UAAYZ,IAAIa,SAASJ,KAAK,mBACrBT,IAAIa,SAASJ,KAAK,mBAAmBK,YAAY,kBACvDN,KAAKI,UAAUJ,QACtBI,UAAUG,SAGV/B,EAAE,gBAAgB8B,YAAY,aAAaE,OAE3ChC,EAAE,uBAAuBgC,OACzBhC,EAAE,mBAAmBgC,OACrBhC,EAAE,sBAAsB8B,YAAY,qBAAqBE,QAQzDC,SAAW,WACXjC,EAAE,YAAYkC,GAAG,SAAS,eAiBlBC,eAhBAC,SAAWpC,EAAE,aAAaQ,KAAK,YAC/B6B,MAAQrC,EAAEO,MAAMC,KAAK,MAErB8B,aADWtC,EAAEO,MAAMC,KAAK,YACA+B,MAAM,KAGlCvC,EAAE,mBAAmB8B,YAAY,UACjC9B,EAAEO,MAAMiC,SAAS,UAGjBC,eAAeC,QAAQ,WAAYN,UACnCK,eAAeC,QAAQ,QAASL,OAEhCtB,sBAlHY,SAASC,QAErBhB,EAAE,iBAAiBU,OAAS,EAAG,KAC3BO,EAAIjB,EAAE,iBAAiBQ,KAAK,SAC5BU,aAAeF,IAAIR,KAAK,gBAGxBU,aAAaR,OAASO,EAAG,KACrBE,cAAgBD,aAAaE,OAAO,EAAGH,GAAKI,OAAOC,aAAa,SAEhEN,IAAIO,SAAS,kBACbP,IAAIQ,KAAKN,sBAE6B,IAAlClB,EAAE,qBAAqBU,UACnBV,EAAE,oBAAoBU,OAAS,EAAG,KAG9BiC,UAAY3B,IAAIS,KAAK,oBAAoBjB,KAAK,cAC9CU,eAAiByB,YACjB3B,IAAIR,KAAK,YAAamC,WAEtBxB,eADAD,aAAeyB,WACcvB,OAAO,EAAGH,GAAKI,OAAOC,aAAa,OAGpEN,IAAIS,KAAK,KAAKD,KAAKR,IAAIS,KAAK,KAAKD,OAAOf,QAAQE,WAAWQ,eAAgBD,oBAE3EF,IAAIQ,KAAKR,IAAIQ,OAAOf,QAAQE,WAAWQ,eAAgBD,iBAyFvE0B,CAAc5C,EAAEO,OAGZP,EAAEO,MAAMkB,KAAK,2BACbU,eAAiBnC,EAAEO,MAAMkB,KAAK,yBAAyBjB,KAAK,oBAEnC,IAAlB2B,iBACPA,eAAiBnC,EAAEO,MAAMiB,QAGf,SAAVa,OACArC,EAAE,sBAAsBgC,OACxBhC,EAAE,cAAc8B,YAAY,UAAUE,OACtChC,EAAE,qBAAqBM,MAAK,WACpBN,EAAEO,MAAMC,KAAK,YAAYE,OAAS,GAElCV,EAAEM,KAAKN,EAAEO,MAAMC,KAAK,YAAY+B,MAAM,MAAM,SAASM,MAAOC,OAC3C9C,EAAE,wBAA0B8C,MAAQ,MAC1CN,SAAS,UAAUO,eAMtC/C,EAAE,sBAAsBgC,OACxBhC,EAAE,cAAcwC,SAAS,UAAUO,OACnC/C,EAAEM,KAAKgC,cAAc,SAASO,MAAOC,OACpB9C,EAAE,wBAA0B8C,MAAQ,MAC1ChB,YAAY,UAAUE,WAKrChC,EAAE,0BAA0B8B,YAAY,UAAUE,WAvTlCgB,QAChBC,YAwTIC,gBAAkBlD,EAAE,sBAAsBU,OAC1CyC,eAAiBnD,EAAE,sBAAsByB,KAAK,yBAAyBA,KAAK,aAAaf,UAGzFV,EAAE,mBAAmBU,OAAS,GAC9BwC,kBAGAA,gBAAkB,EAAG,CAErBlD,EAAEO,MAAMsB,SAASkB,WAGbK,aAAepD,EAAEO,MAAMC,KAAK,iBAChCR,EAAEqD,KAAK,CACHC,IAAK,0CACLC,KAAM,OACNC,KAAM,UACUpB,eACHC,eACGe,qBACDK,EAAEC,IAAIC,SAErBC,QAAS,SAASC,QACC,KAAXA,SAEA7D,EAAE,gBAAkB6D,OAAS,KAAKrD,KAAK,aAAc4C,cACrD3B,KAAK,kBAAkBD,KAAK4B,cAG5BU,yBAMZ9D,EAAEO,MAAMsB,SAASG,UAOjBhC,EAAE,wBAAwBU,OAAS,GACc,GAA9CV,EAAEO,MAAMC,KAAK,YAAY+B,MAAM,KAAK7B,QAC1B,SAAV2B,MAAkB,KACjB0B,OAAS/D,EAAE,sBAAsBgE,QAEjChE,EAAE,mBAAmBU,OAAS,IAC9BqD,OAAS/D,EAAE,iCAEXiE,eAAiBF,OAAOvD,KAAK,MACiB,GAA9CR,EAAEO,MAAMC,KAAK,YAAY+B,MAAM,KAAK7B,QACd,cAAnBuD,gBACAjE,EAAEO,MAAMC,KAAK,iBAAiB0D,QAAQ,QAAU,IApKnD,SAASlD,IAAK+C,YAItBI,gBAAkBJ,OAAOtC,KAAK,gCAC9BzB,EAAE,2BAA2BU,QAAU,EAAG,KACtC0D,eAAiBL,OAAOvD,KAAK,cACjCQ,IAAIa,SAASwC,OAAOrD,IAAIsD,QAAQ9B,SAAS,kBAAkBO,QAC3D/B,IAAIQ,KAAK4C,gBAAgB5B,SAAS,kBAClCxB,IAAIR,KAAK,YAAa4D,gBAGe,IAAjCpE,EAAE,oBAAoBU,QACtByD,gBAAgBpB,OAChBgB,OAAOtC,KAAK,gBAAgBsB,SAE5BgB,OAAOtC,KAAK,YAAYe,SAAS,qBAAqBO,OACtDoB,gBAAgB3B,SAAS,eAqJrB+B,CAAUvE,EAAEO,MAAOwD,QAEnBA,OAAOtC,KAAK,gBAAgBK,YAAY,UAAUE,QAC3ChC,EAAE,oBAAoBU,OAAS,GAAwB,cAAnBuD,gBAC3CtC,WAAW3B,EAAEO,OAQjB2C,iBAAmBC,eACnBqB,YAAYxE,EAAEO,OAEdkE,YAAYzE,EAAEO,OAIJ,SAAV8B,OAAqD,IAAjCrC,EAAE,oBAAoBU,QAE1CV,EAAE,YAAY+C,OAtYFC,QAyYDhD,EAAEO,OAxYjB0C,YAAcD,QAAQxC,KAAK,aACb,GACdR,EAAE,yBAAyBM,MAAK,WAC5BN,EAAEO,MAAMC,KAAK,WAAYyC,oBA8YjCuB,YAAc,SAASxD,SACnBqB,MAAQrB,IAAIR,KAAK,MACrBQ,IAAIwB,SAAS,cAEbkC,QAAQ,CAAC,aAAa,SAASC,SACvBC,aAAeD,IAAIE,WAAW,kBAAmB,kBACrD7E,EAAE8E,KAAKF,cAAcG,MAAK,SAASC,WAC/BhE,IAAIS,KAAK,mBAAqBY,OAAON,aACjCkD,YAAc,yBACd5C,MAAQ,+BAAiC2C,UAAY,SACX,GAA1ChE,IAAIR,KAAK,YAAY+B,MAAM,KAAK7B,QAC7BV,EAAE,wBAAwBU,OAAS,EACtCM,IAAIQ,KAAKR,IAAIQ,OAAS,IAAMyD,aACrBjF,EAAE,uBAAuBU,OAAS,EACzCM,IAAIS,KAAK,oBAAoB4C,OAAOY,aAEpCjE,IAAIQ,KAAKR,IAAIQ,OAAS,IAAMyD,oBAWxCR,YAAc,SAASzD,SACnBqB,MAAQrB,IAAIR,KAAK,MACrBQ,IAAIc,YAAY,cAChB9B,EAAE,mBAAqBqC,OAAON,UAyM9B+B,cAAgB,WAEhB7B,WApMAjC,EAAE,cAAckC,GAAG,SAAS,eACpB/B,OAASH,EAAEO,MAAMC,KAAK,SACtBJ,UAAYJ,EAAEO,MAAM2E,QAAQ,cAAc1E,KAAK,cAC/CH,WAAaL,EAAEO,MAAM2E,QAAQ,cAAc1E,KAAK,MAAM2E,UAAU,GAGhEC,YAAcpF,EAAE,oBAAoBgE,QAAQxD,KAAK,WAE3B,IAAf4E,cACPA,YAAc,QAIlBlF,QAAQC,OAAQC,UAAWC,YAE3BL,EAAE,OAASG,QAAQkF,QACnBrF,EAAE,IAAMoF,aAAaC,QAGrB1D,WAAW3B,EAAE,OAASG,aAIlBmF,kBAAoBtF,EAAE,sBAAsBU,QAAUV,EAAE,eAAeuB,SAAS,kBAAoB,EAAI,GAGxG+D,kBAAoB,GAAKtF,EAAE,sBAAsBU,QAAU4E,mBAG3DtF,EAAE,OAASG,QAAQkF,QACnBrF,EAAE,IAAMoF,aAAaC,UAIrBrF,EAAE,OAASG,QAAQkF,QACnBrF,EAAE,IAAMoF,aAAavD,SAASkB,WAStC/C,EAAE,gBAAgBkC,GAAG,SAAS,WAC1BlC,EAAE,iBAAiBqE,OAAOrE,EAAEO,MAAM2E,QAAQ,aAAa1C,SAAS,kBAChExC,EAAE,cAAc8B,YAAY,WAQhC9B,EAAE,iBAAiBkC,GAAG,SAAS,eACvB9B,UAAYJ,EAAEO,MAAM2E,QAAQ,YAAY1E,KAAK,cACjDR,EAAE,gBAAgBqE,OAAOrE,EAAEO,MAAM2E,QAAQ,aACzClF,EAAE,cAAcwC,SAAS,QAEzBxC,EAAE,mBAAmB8B,YAAY,kBAEjC9B,EAAE,YAAYM,MAAK,kBACXN,EAAEO,MAAMC,KAAK,YAAY0D,QAAQ9D,YAAc,IAC/CJ,EAAEO,MAAM8E,SACD,SAanBrF,EAAE,YAAYkC,GAAG,SAAS,cAClBlC,EAAEO,MAAMsB,SAASA,SAASN,SAAS,uBAAwB,KACvDnB,UAAYJ,EAAEO,MAAM2E,QAAQ,YAAY1E,KAAK,MACjDR,EAAE,IAAMI,UAAY,eAAe4B,WAG/BuD,SAAW,GACXC,SAAW,MACfxF,EAAE,YAAYM,MAAK,mBACmB,IAAvBN,EAAEO,MAAMC,KAAK,MAAuB,KACvCiF,QAAU,GACVpD,MAAQrC,EAAEO,MAAMC,KAAK,MAAMY,OAAO,GAElCqE,QADAzF,EAAEO,MAAMgB,SAAS,kBACPvB,EAAEO,MAAMiB,OAERxB,EAAEO,MAAMkB,KAAK,oBAAoBjB,KAAK,cAEhDR,EAAE0F,QAAQrD,MAAOmD,UAAY,IAEzBxF,EAAEO,MAAMgB,SAAS,iBACjBkE,QAAUzF,EAAEO,MAAMkB,KAAK,KAAK6C,SACpB7C,KAAK,sBAAsBM,SACnC0D,QAAUzF,EAAE2F,KAAKF,QAAQjE,SAE7B+D,SAASlD,OAASoD,QAClBD,SAASI,KAAKvD,YAM1BrC,EAAEO,MAAMsB,SAASJ,KAAK,cAAcnB,MAAK,eACjCuF,MAAQ7F,EAAEO,MAAMC,KAAK,SACrBsF,YAAc,WACO,KAApBP,SAASM,QAAiBN,SAASM,SAAW,OAASA,MAAQA,MAAQ,IAAMN,SAASM,QACjFN,SAASM,SAAW,OAASA,OAAmB,MAAVA,MAAiB,IAAM,UAAYA,MAAQ,MAE3F7F,EAAEO,MAAMkB,KAAK,qBAAqBD,KAAKsE,gBAEzB,cAAd1F,UAC+C,IAA3CJ,EAAE,8BAA8BU,QAChCV,EAAE,4BAA4BgC,OAC9BhC,EAAE,yBAAyBwC,SAAS,iBAAiBV,YAAY,aAAaiB,OAC9E/C,EAAE,2BAA2B+C,SAE7B/C,EAAE,4BAA4B+C,OAC9B/C,EAAE,6BAA6BwC,SAAS,aAAaV,YAAY,iBAAiBE,OAClFhC,EAAE,2BAA2BgC,aAE9B,QAA+C,IAApChC,EAAE,mBAAmBQ,KAAK,MAAuB,KAC3DL,OAASH,EAAE,mBAAmBQ,KAAK,MAAM2E,UAAU,GACvDnF,EAAE,IAAMI,UAAY,sBAAwBD,OAAS,MAAM4C,OAE1B,IAAjC/C,EAAE,oBAAoBU,QACtBV,EAAE,IAAMI,UAAY,0BAA0B2C,WA5d1D/C,EAAE,sBAAsBkC,GAAG,SAAS,eAC5B6D,YAAc/F,EAAE,iBAAiBU,OACrC+B,eAAeC,QAAQ,cAAeqD,gBAnF1C/F,EAAEgG,UAAUC,OAAM,SAASC,OACnBC,KAAOD,EAAEE,SAAWF,EAAEG,MACtBC,QAAUtG,EAAE,UAEH,KAATmG,YAEkC,IAAvBG,QAAQ9F,KAAK,OAAyB8F,QAAQ9F,KAAK,MAAM0D,QAAQ,QAAU,GAClFoC,QAAQjB,aAGsB,IAAvBiB,QAAQ9F,KAAK,OAAyB8F,QAAQ9F,KAAK,MAAM0D,QAAQ,YAAc,GACtFoC,QAAQ7E,KAAK,oBAAoB4D,YA6iB7CrF,EAAE,0FAA0FkC,GAAG,SAAS,eAChGqE,UAAYvG,EAAE,mBACdkD,gBAAkBlD,EAAE,sBAAsBU,OAC1CyC,eAAiBnD,EAAE,sBAAsByB,KAAK,yBAAyBA,KAAK,aAAaf,OAEzFV,EAAEO,MAAMkB,KAAK,qBAAqBD,OAAO0C,QAAQ,SAAW,GAChCsC,MAAxBD,UAAU/F,KAAK,OACZ0C,iBAAmBC,eAAiBnD,EAAE,mBAAmBU,OAAS,GAErE8D,YAAY+B,WAGhBvG,EAAEO,MAAMkB,KAAK,qBAAqBD,OAAO0C,QAAQ,SAAW,GAChCsC,MAAxBD,UAAU/F,KAAK,OACfiE,YAAY8B,cAUxBvG,EAAE,KAAKqF,OAAM,cACoB,MAAzBrF,EAAEO,MAAMC,KAAK,cAAmD,IAAzBR,EAAEO,MAAMC,KAAK,QAAyB,KACzEH,WAAaL,EAAEO,MAAMC,KAAK,QAAQ+B,MAAM,KAAK,WAEvB,IAAflC,WAA4B,KAE/BD,UAAYJ,EAAE,IAAMK,YAAYG,KAAK,cAErCiG,SAAU,EACdzG,EAAE,YAAYM,MAAK,cACXN,EAAEO,MAAMC,KAAK,YAAY0D,QAAQ9D,YAAc,SAC/CJ,EAAEO,MAAM8E,QACRoB,SAAU,GACH,KAIVA,SACDzG,EAAE,SAASqF,aAzY3BrF,EAAE,YAAYkC,GAAG,WAAW,eACpBwE,eAAiB1G,EAAEO,MAAMkB,KAAK,oBAAoBjB,KAAK,cAC3DR,EAAEO,MAAMC,KAAK,aAAckG,gBAC3B1G,EAAE,mBAAmBqF,YAoazBsB,mBAAqB,SAASC,MAAOC,QACjCC,iBAAmB9G,EAAEgG,UAAUvE,KAAK,uBAAuBD,OAC3DuF,WAAaF,GAAGG,UAAUvF,KAAK,aAAauC,QAC5CiD,UAAYjH,EAAEO,MAAMkB,KAAK,aAAauC,QAGtCkD,iBAAmBH,WAAWlF,SAASL,OAC3CuF,WAAWlF,SAASL,KAAKyF,UAAUpF,SAASL,QAC5CyF,UAAUpF,SAASL,KAAK0F,kBAGxBpD,oBAGIqD,QAAU,GAGdnH,EAAE,YAAYM,MAAK,eACX+B,MAAQrC,EAAEO,MAAMC,KAAK,WACJ,IAAV6B,QACF8E,QAAQC,SAAS/E,QAClB8E,QAAQvB,KAAKvD,eAMrBgF,OAASF,QAAQG,OAGjBlF,SAAWpC,EAAE,aAAaQ,KAAK,YACnCR,EAAEqD,KAAK,CACHC,IAAK,yCACLC,KAAM,OACNC,KAAM,UACUpB,iBACDiF,0BACWP,yBACXrD,EAAEC,IAAIC,SAErBC,QAAS,SAASC,QACd0D,QAAQC,IAAI,yBAA2B3D,YAOnD7D,EAAEgG,UAAUyB,OAAM,WAEd3D,gBAGA9D,EAAE,0BAA0BgC,OAG5BjB,sBAGIf,EAAE,oBAAoBU,OAAS,IAE/BV,EAAE,aAAa6B,SAASmF,UAAU,CAC9BU,OAAQ,OACRC,MAAO,WACPC,QAAQ,IAEZ5H,EAAE,aAAa6B,SAASgG,UAAU,CAC9BC,OAAQ,WACRC,WAAY,UACZC,KAAMrB,0BAMVvE,SAAWpC,EAAE,aAAaQ,KAAK,YAC/ByH,eAAiBxF,eAAeyF,QAAQ,YACxC7F,MAAQ,QACW,OAAnB4F,gBAA2BA,gBAAkB7F,SAC7CC,MAAQI,eAAeyF,QAAQ,UAE/BzF,eAAe0F,WAAW,YAC1B1F,eAAe0F,WAAW,UAI9BnI,EAAE,SAASqF,QACXrF,EAAE,oBAAoBqF,QAGlBrF,EAAE,qBAAqBU,OAAS,KAClB,OAAV2B,OAA2B,QAATA,MAAiB,KAM/B0D,YAActD,eAAeyF,QAAQ,kBACzCzF,eAAe0F,WAAW,eACN,OAAhBpC,YAAsB,KAElB5F,OAASkC,MAAM8C,UAAU,GACzBiD,EAAI,EACRpI,EAAE,iBAAiBM,MAAK,eACpB8H,GAAQ,GACArC,YAAa,KAEb3F,UAAYJ,EAAEO,MAAMC,KAAK,cACzBH,WAAaL,EAAEO,MAAMC,KAAK,MAAM2E,UAAU,GAC9CjF,QAAQC,OAAQC,UAAWC,yBArrBjCgC,WAEVD,SAAWpC,EAAE,aAAaQ,KAAK,YACnCR,EAAEqD,KAAK,CACHC,IAAK,8CACLC,KAAM,OACNC,KAAM,UACUpB,eACHC,eACGrC,EAAE,IAAMqC,OAAO7B,KAAK,wBACjBR,EAAE,IAAMqC,OAAO7B,KAAK,wBACxBiD,EAAEC,IAAIC,SAErBC,QAAS,SAASC,YA2qBVwE,CAAShG,OAIbrC,EAAE,IAAMqC,OAAOgD,aAGfrF,EAAE,oBAAoBgE,QAAQqB,QAKlCrF,EAAE,eAAeuB,SAAS,mBAC1BvB,EAAE,4BAA4BgC,OAC9BhC,EAAE,yBAAyB+C,OAC3B/C,EAAE,2BAA2B+C,SAE7B/C,EAAE,4BAA4B+C,OAC9B/C,EAAE,yBAAyBgC,OAC3BhC,EAAE,2BAA2BgC"}